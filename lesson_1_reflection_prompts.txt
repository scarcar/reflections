How did viewing a diff between two versions of a file help you see the bug that
was introduced?
	- displays all differences nicely

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
	- history can provide basis for every change, can easily see why each change 
	  was made

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
	- you can checkin after a specific feature has been implemented.  If you are 
	  automatically checking in, then hard to go back to a known good version.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
	- a specific feature may span multiple files.  Google Docs may be different 
	  because it is a document not source code.

How can you use the commands git log and git diff to view the history of files?
	- git log: shows the commit logs
	- git diff: shows changes between commits

How might using version control make you more confident to make changes that
could break something?
	- can easily revert back to working code set

Now that you have your workspace set up, what do you want to try using Git for?
	- checking in files shared among a team.